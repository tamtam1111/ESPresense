; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32
build_cache_dir = ~/.buildcache
extra_configs = platformio_override.ini

[env]
lib_compat_mode = strict

[common]
debug_build_flags = -O0 -ggdb3 -g3 -DDEBUG_TLS_MEM
build_flags = 
	-D CONFIG_BT_NIMBLE_TASK_STACK_SIZE=4096
	-D SCAN_TASK_STACK_SIZE=2096
	-D REPORT_TASK_STACK_SIZE=3277
	-D MQTT_MIN_FREE_MEMORY=8128
	-D CONFIG_ASYNC_TCP_USE_WDT=0
	-D CONFIG_BT_NIMBLE_MSYS1_BLOCK_COUNT=20
	-D BLE_GATTC_UNRESPONSIVE_TIMEOUT_MS=2000
build_unflags = 
framework = arduino
lib_deps = 
	AsyncTCP = https://github.com/pbolduc/AsyncTCP.git@^1.2.0
	https://github.com/ESPresense/ESPAsyncWebServer.git
	https://github.com/ESPresense/AsyncWiFiSettings.git#1.0.6
	https://github.com/ESPresense/SoftFilters.git
	https://github.com/ESPresense/NimBLE-Arduino.git
	marvinroger/AsyncMqttClient@^0.9.0
	bblanchon/ArduinoJson@^6.19.3
	kitesurfer1404/WS2812FX@^1.4.1

[esp32]
platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.4/platform-espressif32-2.0.4.zip
platform_packages = 
framework = ${common.framework}
build_unflags = ${common.build_unflags}
build_flags = -g
	-D ARDUINO_ARCH_ESP32
	-D CONFIG_BT_NIMBLE_PINNED_TO_CORE=1
	-D REPORT_PINNED_TO_CORE=1
	-D CONFIG_USE_ETHERNET
	
	${common.build_flags}
lib_deps = ${common.lib_deps}

[esp32c3]
platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.4/platform-espressif32-2.0.4.zip
platform_packages = 
framework = ${common.framework}
build_unflags = ${common.build_unflags}
build_flags = -g
	-D ARDUINO_ARCH_ESP32
	-D ARDUINO_ARCH_ESP32C3
	-D CONFIG_IDF_TARGET_ESP32C3
	-D CO
	-D CONFIG_BT_NIMBLE_PINNED_TO_CORE=0
	-D REPORT_PINNED_TO_CORE=0
	${common.build_flags}
lib_deps = ${common.lib_deps}

[sensors]
lib_deps = 
	adafruit/Adafruit Unified Sensor@^1.1.4
	adafruit/Adafruit BME280 Library@^2.2.2
	adafruit/Adafruit BMP085 Library@^1.2.1
	adafruit/Adafruit BMP280 Library@^2.6.3
	adafruit/Adafruit SHT31 Library@^2.2.0
	adafruit/Adafruit TSL2561@^1.1.0
	starmbi/hp_BH1750@^1.0.0
	beegee-tokyo/DHT sensor library for ESPx@^1.18
	sparkfun/SparkFun SGP30 Arduino Library@^1.0.5
	adafruit/Adafruit SGP40 Sensor@^1.1.0
	robtillaart/SHT2x@^0.1.3

[env:esp32]
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
framework = ${esp32.framework}
board = esp32dev
lib_deps = 
	${esp32.lib_deps}
	${sensors.lib_deps}
board_build.partitions = partitions_singleapp.csv
monitor_speed = 115200
upload_speed = 1500000
monitor_filters = esp32_exception_decoder, time
build_unflags = ${esp32.build_unflags}
build_flags = 
	-D FIRMWARE='"esp32"'
	-D SENSORS
	${esp32.build_flags}

[env:esp32c3]
platform = ${esp32c3.platform}
platform_packages = ${esp32c3.platform_packages}
framework = ${esp32c3.framework}
board = esp32-c3-devkitm-1
board_build.partitions = partitions_singleapp.csv
monitor_speed = 115200
upload_speed = 1500000
monitor_filters = esp32_exception_decoder, time
lib_deps = 
	${esp32c3.lib_deps}
	${sensors.lib_deps}
build_unflags = ${esp32c3.build_unflags}
build_flags = 
	-D FIRMWARE='"esp32c3"'
	-D SENSORS
	-D ESP32C3
	${esp32c3.build_flags}

[env:esp32-verbose]
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
framework = ${esp32.framework}
board = esp32dev
lib_deps = 
	${esp32.lib_deps}
	${sensors.lib_deps}
board_build.partitions = partitions_singleapp.csv
monitor_speed = 115200
upload_speed = 1500000
monitor_filters = esp32_exception_decoder, time
build_unflags = ${esp32.build_unflags}
build_flags = 
	-D CORE_DEBUG_LEVEL=2
	-D FIRMWARE='"esp32-verbose"'
	-D VERBOSE
	-D SENSORS
	${esp32.build_flags}

[env:esp32c3-verbose]
platform = ${esp32c3.platform}
platform_packages = ${esp32c3.platform_packages}
framework = ${esp32c3.framework}
board = esp32-c3-devkitm-1
lib_deps = 
	${esp32.lib_deps}
	${sensors.lib_deps}
board_build.partitions = partitions_singleapp.csv
monitor_speed = 115200
upload_speed = 1500000
monitor_filters = esp32_exception_decoder, time
build_unflags = ${esp32c3.build_unflags}
build_flags = 
	-D CORE_DEBUG_LEVEL=2
	-D FIRMWARE='"esp32c3-verbose"'
	-D VERBOSE
	-D SENSORS
	${esp32c3.build_flags}

[env:m5stickc]
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
framework = ${esp32.framework}
board = m5stick-c
lib_deps = 
	https://github.com/ESPresense/TFT_eSPI.git
	https://github.com/ESPresense/TB_Display.git
	${esp32.lib_deps}
	${sensors.lib_deps}
board_build.partitions = partitions_singleapp.csv
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
build_unflags = ${esp32.build_unflags}
build_flags = 
	-D TFT_FONT=1
	-D M5STICK
	-D FIRMWARE='"m5stickc"'
	-D SENSORS
	${esp32.build_flags}

[env:m5stickc-plus]
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
framework = ${esp32.framework}
board = m5stick-c
lib_deps = 
	https://github.com/ESPresense/TFT_eSPI.git
	https://github.com/ESPresense/TB_Display.git
	${esp32.lib_deps}
	${sensors.lib_deps}
board_build.partitions = partitions_singleapp.csv
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
build_unflags = ${esp32.build_unflags}
build_flags = 
	-D TFT_FONT=2
	-D M5STICK
	-D PLUS
	-D FIRMWARE='"m5stickc-plus"'
	-D SENSORS
	${esp32.build_flags}

[env:m5atom]
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
framework = ${esp32.framework}
board = m5stack-atom
lib_deps = 
	${esp32.lib_deps}
	${sensors.lib_deps}
board_build.partitions = partitions_singleapp.csv
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
build_unflags = ${esp32.build_unflags}
build_flags = 
	-D M5ATOM
	-D MATRIX
	-D FIRMWARE='"m5atom"'
	-D SENSORS
	${esp32.build_flags}

[env:macchina-a0]
platform = ${esp32.platform}
platform_packages = ${esp32.platform_packages}
framework = ${esp32.framework}
board = esp32dev
lib_deps = 
	${esp32.lib_deps}
	${sensors.lib_deps}
board_build.partitions = partitions_singleapp.csv
monitor_speed = 115200
build_unflags = ${esp32.build_unflags}
build_flags = 
	-D MACCHINA_A0
	-D FIRMWARE='"macchina-a0"'
	-D SENSORS
	${esp32.build_flags}
